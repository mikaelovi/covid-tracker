[{"C:\\devs\\rccgta\\development\\covid-tracker\\src\\index.js":"1","C:\\devs\\rccgta\\development\\covid-tracker\\src\\app.js":"2","C:\\devs\\rccgta\\development\\covid-tracker\\src\\api\\index.js":"3","C:\\devs\\rccgta\\development\\covid-tracker\\src\\Components\\index.js":"4","C:\\devs\\rccgta\\development\\covid-tracker\\src\\Components\\Chart\\Chart.jsx":"5","C:\\devs\\rccgta\\development\\covid-tracker\\src\\Components\\Cards\\Cards.jsx":"6","C:\\devs\\rccgta\\development\\covid-tracker\\src\\Components\\CountryPicker\\CountryPicker.jsx":"7"},{"size":149,"mtime":1610241305703,"results":"8","hashOfConfig":"9"},{"size":1251,"mtime":1610241061807,"results":"10","hashOfConfig":"9"},{"size":1306,"mtime":1610241669221,"results":"11","hashOfConfig":"9"},{"size":175,"mtime":1610241459439,"results":"12","hashOfConfig":"9"},{"size":2305,"mtime":1610241549491,"results":"13","hashOfConfig":"9"},{"size":2557,"mtime":1610241520860,"results":"14","hashOfConfig":"9"},{"size":959,"mtime":1610240816534,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xoa7rh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\devs\\rccgta\\development\\covid-tracker\\src\\index.js",[],["34","35"],"C:\\devs\\rccgta\\development\\covid-tracker\\src\\app.js",[],"C:\\devs\\rccgta\\development\\covid-tracker\\src\\api\\index.js",[],"C:\\devs\\rccgta\\development\\covid-tracker\\src\\Components\\index.js",[],"C:\\devs\\rccgta\\development\\covid-tracker\\src\\Components\\Chart\\Chart.jsx",["36"],"import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n        setDailyData(await fetchDailyData());\r\n      };\r\n      fetchAPI();\r\n    }, []);\r\n    const lineChart = dailyData.length ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map(({ confirmed }) => confirmed),\r\n              label: \"Infected\",\r\n              borderColor: \"#3333ff\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: \"Deaths\",\r\n              borderColor: \"red\",\r\n              backgroundColor: \"rgba(255,0,0,0.5)\",\r\n              fill: true,\r\n            },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null;\r\n  \r\n    const barChart = confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\r\n          datasets: [\r\n            {\r\n              label: \"People\",\r\n              backgroundColor: [\r\n                \"rgba(0, 0, 255, 0.5)\",\r\n                \"rgba(0, 255, 0, 0.5)\",\r\n                \"rgba(255, 0, 0, 0.5)\",\r\n                \"rgba(242, 234, 0, 0.5)\",\r\n              ],\r\n              hoverBackgroundColor: [\r\n                \"rgba(0, 77, 153)\",\r\n                \"rgba(30, 102, 49)\",\r\n                \"rgba(255, 51, 51)\",\r\n                \"rgba(204, 153, 0)\",\r\n              ],\r\n              data: [\r\n                confirmed.value,\r\n                recovered.value,\r\n                deaths.value,\r\n                confirmed.value - (recovered.value + deaths.value),\r\n              ],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null;\r\n  \r\n    return (\r\n        <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n      );\r\n    };\r\n\r\n    export default Chart;\r\n    ","C:\\devs\\rccgta\\development\\covid-tracker\\src\\Components\\Cards\\Cards.jsx",["37"],"import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({\r\n  data: { confirmed, recovered, deaths, lastUpdate },\r\n  country,\r\n}) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  const active = confirmed[\"value\"] - recovered[\"value\"] - deaths[\"value\"];\r\n  let cardDetails = [\r\n    {\r\n      style: styles.infected,\r\n      text: \"Infected\",\r\n      value: confirmed.value,\r\n      bottomText: \"Number of infect cases of COVID-19\",\r\n    },\r\n    {\r\n      style: styles.recovered,\r\n      text: \"Recovered\",\r\n      value: recovered.value,\r\n      bottomText: \"Number of recoveries from COVID-19\",\r\n    },\r\n    {\r\n      style: styles.deaths,\r\n      text: \"Deaths\",\r\n      value: deaths.value,\r\n      bottomText: \"Number of deaths caused by COVID-19\",\r\n    },\r\n    {\r\n      style: styles.active,\r\n      text: \"Active\",\r\n      value: active,\r\n      bottomText: \"Number of active cases of COVID-19\",\r\n    },\r\n  ];\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {cardDetails.map((detail, index) => (\r\n          <Grid\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            md={2}\r\n            className={cx(styles.Card, detail.style)}\r\n            key={index}\r\n            style={{ margin: \"0px 23.675px\", padding: \"12px\" }}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                <b>{detail.text}</b>\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp\r\n                  start={0}\r\n                  end={detail.value}\r\n                  duration={2}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textPrimary\">Last Updated at : </Typography>\r\n              <Typography color=\"textSecondary\" variant=\"body2\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" variant=\"body2\">\r\n                {new Date(lastUpdate).toLocaleTimeString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">{detail.bottomText}</Typography>\r\n              <Typography color=\"textPrimary\"> {country} </Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;",["38","39"],"C:\\devs\\rccgta\\development\\covid-tracker\\src\\Components\\CountryPicker\\CountryPicker.jsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":6,"column":7,"nodeType":"46","messageId":"47","endLine":6,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":7,"column":7,"nodeType":"46","messageId":"47","endLine":7,"endColumn":12},{"ruleId":"40","replacedBy":"49"},{"ruleId":"42","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Chart' is assigned a value but never used.","Identifier","unusedVar","'Cards' is assigned a value but never used.",["51"],["52"],"no-global-assign","no-unsafe-negation"]